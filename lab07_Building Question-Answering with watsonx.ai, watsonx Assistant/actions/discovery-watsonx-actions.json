{
  "name": "discovery watsonx sample actions",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2023-08-08T14:50:37.686Z",
  "updated": "2023-08-08T14:57:09.297Z",
  "language": "en",
  "skill_id": "d283483b-e2ff-4ed9-9134-f2ef57ef0f28",
  "workspace": {
    "actions": [
      {
        "steps": [
          {
            "step": "step_291",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "\"\""
                  },
                  "skill_variable": "passages"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_291",
            "next_step": "step_167"
          },
          {
            "step": "step_167",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${search_results}.get(0).document_passages.get(0).passage_text"
                  },
                  "skill_variable": "snippet"
                },
                {
                  "value": {
                    "expression": "${snippet}"
                  },
                  "skill_variable": "passages"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_167",
            "condition": {
              "and": [
                {
                  "expression": "${search_results}.size > 0"
                },
                {
                  "expression": "${search_results}.get(0).document_passages.size > 0"
                }
              ]
            },
            "next_step": "step_239"
          },
          {
            "step": "step_239",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${search_results}.get(1).document_passages.get(0).passage_text"
                  },
                  "skill_variable": "snippet"
                },
                {
                  "value": {
                    "expression": "${passages}.concat(\"    \").concat(${snippet})"
                  },
                  "skill_variable": "passages"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_239",
            "condition": {
              "and": [
                {
                  "expression": "${search_results}.size > 1"
                },
                {
                  "expression": "${search_results}.get(1).document_passages.size > 0"
                }
              ]
            },
            "next_step": "step_982"
          },
          {
            "step": "step_982",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${search_results}.get(2).document_passages.get(0).passage_text"
                  },
                  "skill_variable": "snippet"
                },
                {
                  "value": {
                    "expression": "${passages}.concat(\"    \").concat(${snippet})"
                  },
                  "skill_variable": "passages"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_982",
            "condition": {
              "and": [
                {
                  "expression": "${search_results}.size > 2"
                },
                {
                  "expression": "${search_results}.get(2).document_passages.size > 0"
                }
              ]
            },
            "next_step": "step_858"
          },
          {
            "step": "step_858",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${passages}.replaceAll(\"<em>\",\"\").replaceAll(\"</em>\",\"\")"
                  },
                  "skill_variable": "passages"
                },
                {
                  "value": {
                    "expression": "(\"Agent: Okay, I am awaiting your instructions\\nUser: Watson, here are your instructions:\\n1. You will be given a document that should be used to reply to user questions.\\n2. You should generate the next response using information available in the document.\\n3. If you can't find an answer, say \\\"I don't know\\\".\\n4. Your responses should not be long and just have about 1-2 sentences.\\n5. You should not repeat your answers.\\n6. Do not use any other knowledge.\\n\\nPlease repeat the instructions back to me so that I know you understood.\\n\\nAgent: Ok, here are my instructions:\\n\\n1. I will be given a document that should be used to reply to user questions.\\n2. I should generate the next response using information available in the document.\\n3. If you can't find an answer, say \\\"I don't know\\\".\\n4. My responses should not be long and just have about 5-6 sentences.\\n5. I should not repeat your answers.\\n6. I will not use any other knowledge.\\n\\nI am ready, please give me the document.\\n\\nUser: Here's the document: \\n\").concat(${passages}).concat(\"\\nAgent: I am ready to answer your questions from the document. I will not repeat answers I have given.\\nUser:\").concat(${query_text}).concat(\"\\n\\nAgent:\")"
                  },
                  "skill_variable": "model_input"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_858",
            "next_step": "step_762"
          },
          {
            "step": "step_762",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Invoking watsonx "
                          },
                          {
                            "skill_variable": "model_id"
                          },
                          {
                            "scalar": " with "
                          },
                          {
                            "skill_variable": "model_input"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_762",
            "condition": {
              "eq": [
                {
                  "skill_variable": "verbose"
                },
                {
                  "scalar": true
                }
              ]
            },
            "next_step": "step_657"
          },
          {
            "step": "step_657",
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action",
              "invoke_action": {
                "action": "action_20548-2-2",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_657_result_2"
              }
            },
            "variable": "step_657",
            "next_step": "step_323"
          },
          {
            "step": "step_323",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I'm sorry, I encountered an connection error: "
                          },
                          {
                            "skill_variable": "model_response"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_323",
            "condition": {
              "not": {
                "exists": {
                  "skill_variable": "model_response"
                }
              }
            },
            "next_step": "step_600"
          },
          {
            "step": "step_600",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I'm sorry, I was not able to find an answer to your question."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_600",
            "condition": {
              "matches": [
                {
                  "skill_variable": "model_response"
                },
                {
                  "scalar": "I don't know",
                  "options": {
                    "ignore_case": true
                  }
                }
              ]
            },
            "next_step": "step_525"
          },
          {
            "step": "step_525",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "model_response"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_525"
          }
        ],
        "title": "Generate Answer",
        "action": "action_20548-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_43808_intent_33082-2"
        },
        "variables": [
          {
            "title": "",
            "variable": "step_167",
            "data_type": "any"
          },
          {
            "variable": "step_167_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_169_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_217_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_222_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_237_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_237_result_2",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_239",
            "data_type": "any"
          },
          {
            "variable": "step_239_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_286_result_1",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_291",
            "data_type": "any"
          },
          {
            "title": "I'm sorry, I encountered an connection error: {variable}",
            "variable": "step_323",
            "data_type": "any"
          },
          {
            "variable": "step_472_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_474_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_474_result_2",
            "data_type": "any"
          },
          {
            "variable": "step_492_result_1",
            "data_type": "any"
          },
          {
            "title": "{variable}",
            "variable": "step_525",
            "data_type": "any"
          },
          {
            "variable": "step_597_result_1",
            "data_type": "any"
          },
          {
            "title": "I'm sorry, I was not able to find an answer to your question.",
            "variable": "step_600",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_657",
            "data_type": "any"
          },
          {
            "variable": "step_657_result_2",
            "data_type": "any"
          },
          {
            "title": "Invoking watsonx {variable} with {variable}",
            "variable": "step_762",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_858",
            "data_type": "any"
          },
          {
            "variable": "step_890_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_942_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_978_result_1",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_982",
            "data_type": "any"
          },
          {
            "variable": "step_982_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "action_44059-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_796",
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/ml/v1-beta/generation/text",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "cc50493e455de183d661b95360196ddb468a02051add6dcaf4a6479b34900be5",
                  "catalog_item_id": "e210b2f1-9015-47b0-8a45-1a68611d6448"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "model_input"
                      },
                      "parameter": "input"
                    },
                    {
                      "value": {
                        "skill_variable": "model_id"
                      },
                      "parameter": "model_id"
                    },
                    {
                      "value": {
                        "skill_variable": "watsonx_project_id"
                      },
                      "parameter": "project_id"
                    },
                    {
                      "value": {
                        "skill_variable": "model_parameters_temperature"
                      },
                      "parameter": "parameters.temperature"
                    },
                    {
                      "value": {
                        "skill_variable": "model_parameters_max_new_tokens"
                      },
                      "parameter": "parameters.max_new_tokens"
                    },
                    {
                      "value": {
                        "skill_variable": "model_parameters_min_new_tokens"
                      },
                      "parameter": "parameters.min_new_tokens"
                    },
                    {
                      "value": {
                        "skill_variable": "model_parameters_stop_sequences"
                      },
                      "parameter": "parameters.stop_sequences"
                    },
                    {
                      "value": {
                        "skill_variable": "model_parameters_repetition_penalty"
                      },
                      "parameter": "parameters.repetition_penalty"
                    }
                  ],
                  "query": [
                    {
                      "value": {
                        "skill_variable": "watsonx_api_version"
                      },
                      "parameter": "version"
                    }
                  ]
                },
                "result_variable": "step_796_result_1"
              }
            },
            "variable": "step_796",
            "next_step": "step_930"
          },
          {
            "step": "step_930",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_796_result_1.body.results}[0].generated_text"
                  },
                  "skill_variable": "model_response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_930",
            "condition": {
              "and": [
                {
                  "eq": [
                    {
                      "variable": "step_796_result_1",
                      "variable_path": "success"
                    },
                    {
                      "scalar": true
                    }
                  ]
                },
                {
                  "expression": "${step_796_result_1.body.results}.size() > 0"
                }
              ]
            },
            "next_step": "step_525"
          },
          {
            "step": "step_525",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "null"
                  },
                  "skill_variable": "model_response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_525"
          }
        ],
        "title": "Invoke watsonx generation API",
        "action": "action_20548-2-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_43808_intent_33082-2-2"
        },
        "variables": [
          {
            "variable": "step_167_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_169_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_217_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_222_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_237_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_237_result_2",
            "data_type": "any"
          },
          {
            "variable": "step_239_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_286_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_472_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_474_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_474_result_2",
            "data_type": "any"
          },
          {
            "variable": "step_492_result_1",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_525",
            "data_type": "any"
          },
          {
            "variable": "step_597_result_1",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_796",
            "data_type": "any"
          },
          {
            "variable": "step_796_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_890_result_1",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_930",
            "data_type": "any"
          },
          {
            "variable": "step_942_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_978_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_982_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_774",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.original_text"
                  },
                  "skill_variable": "query_text"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_774",
            "next_step": "step_983"
          },
          {
            "step": "step_983",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "query_text"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_983",
            "condition": {
              "not": {
                "exists": {
                  "skill_variable": "query_text"
                }
              }
            },
            "next_step": "step_474"
          },
          {
            "step": "step_474",
            "output": {
              "generic": []
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/v2/projects/{project_id}/query",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "8566081a305e8f8ade4e9bd3887da0600e87948417fc10ba38ee121426f8c50b",
                  "catalog_item_id": "8fd0494f-37ea-48d7-9582-1ace2fc0c45a"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "expression": "3"
                      },
                      "parameter": "count"
                    },
                    {
                      "value": {
                        "expression": "[\"title\",\"metadata.source.url\"]"
                      },
                      "parameter": "return"
                    },
                    {
                      "value": {
                        "expression": "[\"text\"]"
                      },
                      "parameter": "passages.fields"
                    },
                    {
                      "value": {
                        "expression": "true"
                      },
                      "parameter": "passages.enabled"
                    },
                    {
                      "value": {
                        "expression": "250"
                      },
                      "parameter": "passages.characters"
                    },
                    {
                      "value": {
                        "expression": "true"
                      },
                      "parameter": "passages.find_answers"
                    },
                    {
                      "value": {
                        "expression": "false"
                      },
                      "parameter": "table_results.enabled"
                    },
                    {
                      "value": {
                        "skill_variable": "query_text"
                      },
                      "parameter": "natural_language_query"
                    },
                    {
                      "value": {
                        "scalar": true
                      },
                      "parameter": "passages.per_document"
                    }
                  ],
                  "path": [
                    {
                      "value": {
                        "skill_variable": "discovery_project_id"
                      },
                      "parameter": "project_id"
                    }
                  ],
                  "query": [
                    {
                      "value": {
                        "skill_variable": "discovery_date_version"
                      },
                      "parameter": "version"
                    }
                  ]
                },
                "result_variable": "step_474_result_2"
              }
            },
            "variable": "step_474",
            "next_step": "step_105"
          },
          {
            "step": "step_105",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Sorry, the search failed!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_105",
            "condition": {
              "eq": [
                {
                  "variable": "step_474_result_2",
                  "variable_path": "success"
                },
                {
                  "scalar": false
                }
              ]
            },
            "next_step": "step_237"
          },
          {
            "step": "step_237",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_474_result_2}.body.results"
                  },
                  "skill_variable": "search_results"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action",
              "invoke_action": {
                "action": "action_20548-2",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_237_result_2"
              }
            },
            "variable": "step_237",
            "condition": {
              "eq": [
                {
                  "variable": "step_474_result_2",
                  "variable_path": "success"
                },
                {
                  "scalar": true
                }
              ]
            },
            "next_step": "step_195"
          },
          {
            "step": "step_195",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_474_result_2}.body.results=[]"
                  },
                  "skill_variable": "search_results"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_195"
          }
        ],
        "title": "Search",
        "action": "action_44059-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_47312_intent_17298-2"
        },
        "variables": [
          {
            "variable": "step_001_result_1",
            "data_type": "any"
          },
          {
            "title": "Sorry, the search failed!",
            "variable": "step_105",
            "data_type": "any"
          },
          {
            "variable": "step_117_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_146_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_164_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_167_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_169_result_1",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_195",
            "data_type": "any"
          },
          {
            "variable": "step_222_result_1",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_237",
            "data_type": "any"
          },
          {
            "variable": "step_237_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_237_result_2",
            "data_type": "any"
          },
          {
            "variable": "step_249_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_272_result_2",
            "data_type": "any"
          },
          {
            "variable": "step_286_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_338_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_418_result_2",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_474",
            "data_type": "any"
          },
          {
            "variable": "step_474_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_474_result_2",
            "data_type": "any"
          },
          {
            "variable": "step_492_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_543_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_597_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_748_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_749_result_1",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_774",
            "data_type": "any"
          },
          {
            "variable": "step_774_result_2",
            "data_type": "any"
          },
          {
            "variable": "step_829_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_863_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_876_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_896_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_978_result_1",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_983",
            "data_type": "any"
          }
        ],
        "next_action": "action_20548-2-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_558",
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "action_44059-2",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_558_result_1"
              }
            },
            "variable": "step_558",
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No action matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_558",
            "data_type": "any"
          },
          {
            "variable": "step_558_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_20548-2",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_43808_intent_33082-2",
        "examples": []
      },
      {
        "intent": "action_43808_intent_33082-2-2",
        "examples": []
      },
      {
        "intent": "action_47312_intent_17298-2",
        "examples": []
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2021-11-27"
      }
    },
    "variables": [
      {
        "title": "discovery_date_version",
        "variable": "discovery_date_version",
        "data_type": "any",
        "description": "Discovery date versions are documented in the release notes (https://cloud.ibm.com/docs/discovery-data?topic=discovery-data-release-notes).",
        "initial_value": {
          "scalar": "2022-08-01"
        }
      },
      {
        "title": "discovery_project_id",
        "variable": "discovery_project_id",
        "data_type": "string",
        "description": "You MUST set this value to the project ID of the Discovery project containing your data"
      },
      {
        "title": "model_id",
        "variable": "model_id",
        "data_type": "string",
        "description": "The ID of the model to be used for this user prompt. Please refer to the list of models at https://bam.res.ibm.com/docs/models",
        "initial_value": {
          "scalar": "google/flan-ul2"
        }
      },
      {
        "title": "model_input",
        "variable": "model_input",
        "data_type": "string",
        "description": "input to the watsonx model"
      },
      {
        "title": "model_parameters_max_new_tokens",
        "variable": "model_parameters_max_new_tokens",
        "data_type": "number",
        "description": "The maximum number of new tokens to be generated.",
        "initial_value": {
          "scalar": 300
        }
      },
      {
        "title": "model_parameters_min_new_tokens",
        "variable": "model_parameters_min_new_tokens",
        "data_type": "number",
        "description": "The minimum number of new tokens to be generated.",
        "initial_value": {
          "scalar": 1
        }
      },
      {
        "title": "model_parameters_repetition_penalty",
        "variable": "model_parameters_repetition_penalty",
        "data_type": "number",
        "description": "",
        "initial_value": {
          "scalar": 1.1
        }
      },
      {
        "title": "model_parameters_stop_sequences",
        "variable": "model_parameters_stop_sequences",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "expression": "[ \"\\n\\n\"]"
        }
      },
      {
        "title": "model_parameters_temperature",
        "variable": "model_parameters_temperature",
        "data_type": "number",
        "description": "he value used to control the next token probabilities. The range is from 0.05 to 1.00; 0.05 makes it mostly deterministic.",
        "initial_value": {
          "scalar": 0
        }
      },
      {
        "title": "model_response",
        "variable": "model_response",
        "data_type": "string",
        "description": "The text generated by the model in response to the model input"
      },
      {
        "title": "passages",
        "variable": "passages",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "query_text",
        "variable": "query_text",
        "data_type": "any",
        "description": "You MAY change this to pass queries to Watson Discovery. By default the Search action passes the user’s input.text directly."
      },
      {
        "title": "search_results",
        "variable": "search_results",
        "data_type": "any",
        "description": "Response object from Discovery query (https://cloud.ibm.com/apidocs/discovery-data#query)."
      },
      {
        "title": "snippet",
        "variable": "snippet",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "verbose",
        "variable": "verbose",
        "data_type": "boolean",
        "description": "Prints debug output when true",
        "initial_value": {
          "scalar": false
        }
      },
      {
        "title": "watsonx_api_version",
        "variable": "watsonx_api_version",
        "data_type": "any",
        "description": "The version of the watsonx api (required)",
        "initial_value": {
          "scalar": "2023-05-29"
        }
      },
      {
        "title": "watsonx_project_id",
        "variable": "watsonx_project_id",
        "data_type": "any",
        "description": "You MUST set this to your watsonx project id"
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": true
  },
  "description": "created for assistant 1c76effb-2430-4334-8897-6cdad3c6282b",
  "assistant_id": "a1109da6-1e19-46b5-9586-478484eab96a",
  "workspace_id": "d283483b-e2ff-4ed9-9134-f2ef57ef0f28",
  "dialog_settings": {},
  "next_snapshot_version": "1"
}
